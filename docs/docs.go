// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/user/login": {
            "post": {
                "description": "Login system by username and password.\n\n\n## request\n\n| field | type | required | description |\n|:------|:------------|:---:|:----|\n| username | string | Y | user's name. |\n| password | string | Y | user's password. |\n\n\n\n## response\n\n| field | type | description |\n|:------|:----|:------------|\n| errcode | int | error code: 200 - success, 400 - bad request, 404 - not found, 500 - internal server error.|\n| token | string | token string. |\n\n## example\n\n### request\n\n` + "`" + `` + "`" + `` + "`" + `bash\n\ncurl \"http://localhost:8820/v1/user/login\" \\\n  -i \\\n  -X 'POST' \\\n  -d '{\"username\":\"alice\", \"password\": \"123456\"}' \n\n` + "`" + `` + "`" + `` + "`" + `\n\n#### response\n\n` + "`" + `` + "`" + `` + "`" + `json\n\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\nDate: Mon, 19 Sep 2022 11:21:54 GMT\nContent-Length: 45\n\n{\n    \"errcode\": 0,\n    \"data\": \"fsdafsdafsafasdfsdafsdafsdafsdafsd\"\n}\n\n` + "`" + `` + "`" + `` + "`" + `\n\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "Login System",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controller_http_v1.doLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controller_http_v1.loginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entity.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/loginwx": {
            "post": {
                "description": "Login system by weixin.\n\n\n## request\n\n| field | type | required | description |\n|:------|:------------|:---:|:----|\n| code | string | Y | weixin auth code. |\n\n\n\n## response\n\n| field | type | description |\n|:------|:----|:------------|\n| errcode | int | error code: 200 - success, 400 - bad request, 404 - not found, 500 - internal server error.|\n| token | string | token string. |\n\n## example\n\n### request\n\n` + "`" + `` + "`" + `` + "`" + `bash\n\ncurl \"http://localhost:8820/v1/user/loginwx\" \\\n  -i \\\n  -X 'POST' \\\n  -d '{\"code\":\"fsafsdfasfsa\"}' \n\n` + "`" + `` + "`" + `` + "`" + `\n\n#### response\n\n` + "`" + `` + "`" + `` + "`" + `json\n\nHTTP/1.1 200 OK\nContent-Type: application/json; charset=utf-8\nDate: Mon, 19 Sep 2022 11:21:54 GMT\nContent-Length: 45\n\n{\n    \"errcode\": 0,\n    \"data\": \"fsdafsdafsafasdfsdafsdafsdafsdafsd\"\n}\n\n` + "`" + `` + "`" + `` + "`" + `\n\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "LoginWx",
                "operationId": "loginWx",
                "parameters": [
                    {
                        "description": "Login System By Weixin",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controller_http_v1.doLoginWxRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controller_http_v1.loginWxResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/entity.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/entity.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/entity.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "guser_internal_controller_http_v1.doLoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "alice"
                }
            }
        },
        "guser_internal_controller_http_v1.doLoginWxRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "sdfksdfjsaljfsajfsk"
                }
            }
        },
        "guser_internal_controller_http_v1.loginResponse": {
            "type": "object",
            "properties": {
                "errcode": {
                    "type": "integer",
                    "example": 0
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmUiOjM2MDAsInBhc3N3b3JkIjoiMTIzNDU2IiwidXNlcm5hbWUiOiJhbGljZSJ9.u9Pha5vRrJ5meQasanfshl4hLBghLDzVF0rkX6ZdKLw"
                }
            }
        },
        "guser_internal_controller_http_v1.loginWxResponse": {
            "type": "object",
            "properties": {
                "errcode": {
                    "type": "integer",
                    "example": 0
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmUiOjM2MDAsInBhc3N3b3JkIjoiMTIzNDU2IiwidXNlcm5hbWUiOiJhbGljZSJ9.u9Pha5vRrJ5meQasanfshl4hLBghLDzVF0rkX6ZdKLw"
                }
            }
        },
        "internal_controller_http_v1.doLoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "alice"
                }
            }
        },
        "internal_controller_http_v1.doLoginWxRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "sdfksdfjsaljfsajfsk"
                }
            }
        },
        "internal_controller_http_v1.loginResponse": {
            "type": "object",
            "properties": {
                "errcode": {
                    "type": "integer",
                    "example": 0
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmUiOjM2MDAsInBhc3N3b3JkIjoiMTIzNDU2IiwidXNlcm5hbWUiOiJhbGljZSJ9.u9Pha5vRrJ5meQasanfshl4hLBghLDzVF0rkX6ZdKLw"
                }
            }
        },
        "internal_controller_http_v1.loginWxResponse": {
            "type": "object",
            "properties": {
                "errcode": {
                    "type": "integer",
                    "example": 0
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHBpcmUiOjM2MDAsInBhc3N3b3JkIjoiMTIzNDU2IiwidXNlcm5hbWUiOiJhbGljZSJ9.u9Pha5vRrJ5meQasanfshl4hLBghLDzVF0rkX6ZdKLw"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
